name: BUILD

on:
  push:
  schedule:
    - cron:  '1 */8 * * *'

jobs:
  buildAUR:
    strategy:
      matrix:
        repos:
          - adduser-deb
          - alist
          - backblaze-b2
          - carapace
          - davmail
          - doggo
          - dracut-git
          - dracut-numlock
          - fcitx5-pinyin-custom-pinyin-dictionary
          - fcitx5-pinyin-chinese-idiom
          - fcitx5-pinyin-sougou
          - linuxqq-nt-bwrap
          - linux-zen-versioned-bin
          - mpris-proxy-service
          - networkd-broker
          - networkd-notify-git
          - pacman-hook-kernel-install
          - playerctld-systemd-unit
          - proto
          - remove-orphaned-kernels
          - swt
          - wechat-universal-bwrap
      fail-fast: false

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: ./build-aur-action
      with:
        repo-name: ${{ matrix.repos }}
        preinstallPkgs: ${{ matrix.preinstall-pkgs }}

    - uses: actions/upload-artifact@v4
      with:
        path: ./*/*.pkg.tar.zst
        name: ${{ matrix.repos }}
        if-no-files-found: error

    - uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        tag: "packages"
        artifacts: "./*/*.zst"
        token: ${{ secrets.GITHUB_TOKEN }}

  buildNonAUR:
    strategy:
      matrix:
        PKGBUILDs:
          - fselect
          - ion-git
          - keepassxc-proxy-rust-git
          - rustic-rs
          - veracrypt-updated
          - yt-dlp-plugin-chromecookieunlock
      fail-fast: false

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build Non-AUR packages
        id: makepkg
        uses: ./build-nonaur-action
        with:
          pkgdir: ${{ matrix.PKGBUILDs }}
          aurDeps: true

      - uses: actions/upload-artifact@v4
        with:
          path: ./*/*.pkg.tar.zst
          name: ${{ matrix.PKGBUILDs }}
          if-no-files-found: error

      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          tag: "packages"
          artifacts: "./*/*.zst"
          token: ${{ secrets.GITHUB_TOKEN }}

  uploadToOneDrive:
    runs-on: ubuntu-latest
    if: always()
    needs: [buildAUR, buildNonAUR]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        id: download

      - uses: ./create-db-and-upload-action
        with:
          RCLONE_ONEDRIVE_CLIENT_ID: ${{ secrets.RCLONE_ONEDRIVE_CLIENT_ID }}
          RCLONE_ONEDRIVE_CLIENT_SECRET: ${{ secrets.RCLONE_ONEDRIVE_CLIENT_SECRET }}
          RCLONE_ONEDRIVE_AUTH_URL: ${{ secrets.RCLONE_ONEDRIVE_AUTH_URL }}
          RCLONE_ONEDRIVE_TOKEN_URL: ${{ secrets.RCLONE_ONEDRIVE_TOKEN_URL }}
          RCLONE_ONEDRIVE_REGION: global
          RCLONE_ONEDRIVE_TOKEN: ${{ secrets.RCLONE_ONEDRIVE_TOKEN }}
          RCLONE_ONEDRIVE_DRIVE_ID: ${{ secrets.RCLONE_ONEDRIVE_DRIVE_ID }}
          RCLONE_ONEDRIVE_DRIVE_TYPE: business
          dest_path: /repo/arch
          repo_name: hilebert
          gpg-privatekey: ${{ secrets.gpg_private_key }}
          local_path: ${{ steps.download.outputs.download-path }}
