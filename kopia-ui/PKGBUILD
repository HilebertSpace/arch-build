# Maintainer: Christian Heusel <christian@heusel.eu>
# Contributor: Jens JÃ¤schke <arch [at] jensjaeschke [dot] de>

_pkgname='kopia'
pkgname="${_pkgname}-ui"
pkgdesc='A cross-platform backup-tool with encryption, deduplication, compression and cloud support.'
pkgver='0.15.0'
pkgrel='1'
arch=('x86_64')
url="https://${_pkgname}.io"
license=('APACHE')
depends=('electron' 'nodejs')
makedepends=('asar' 'go' 'npm')
optdepends=('fuse3: Needed to mount Kopia snapshots on local filesystem')
checkdepends=('openssh' 'inetutils')
source=(
    "${pkgname}-${pkgver}.tar.gz::https://github.com/${_pkgname}/${_pkgname}/archive/refs/tags/v${pkgver}.tar.gz"
    "${pkgname}"
    "${pkgname}.desktop"
)
sha256sums=(
    '7000f6999ea8d1975645293c3f4f3ba25583ba13d3095aef3cf274251b36b75f'
    '27130be5b25b07169f764ddb8f8a08386bb17b5f33b5de140d3364fab6fd6eff'
    'b7371b2b724c2823219483eaae880569484a7ca77faf6fe4b8985b6f152eb8df'
)

prepare() {
    cd "${_pkgname}-${pkgver}/app"
    npm install
}

build() {
    cd "${_pkgname}-${pkgver}"
    export CGO_CPPFLAGS="${CPPFLAGS}"
    export CGO_CFLAGS="${CFLAGS}"
    export CGO_CXXFLAGS="${CXXFLAGS}"
    export CGO_LDFLAGS="${LDFLAGS}"
    export GOFLAGS="-buildmode=pie -trimpath -mod=readonly -modcacherw"
    go build -o "dist/${_pkgname}_linux_x64" -ldflags "-linkmode=external -X github.com/${_pkgname}/${_pkgname}/repo.BuildVersion=${pkgver}-${pkgrel} -X github.com/${_pkgname}/${_pkgname}/repo.BuildInfo=unofficial -X github.com/${_pkgname}/${_pkgname}/repo.BuildGitHubRepo=ARCH_USER_REPOSITORY"
    npm --prefix app run build-electron -- --linux --x64 --dir -c.electronDist='/usr/lib/electron' -c.electronVersion="$(</usr/lib/electron/version)"
}

check() {
    cd "${_pkgname}-${pkgver}"
    make test
}

package() {
    cd "${_pkgname}-${pkgver}"
    install -Dm 644 "../${pkgname}.desktop" -t "${pkgdir}/usr/share/applications"
    install -Dm 755 "../${pkgname}" -t "${pkgdir}/usr/bin"
    install -dm 755 "${pkgdir}/usr/lib/${pkgname}"
    cp -r "dist/${pkgname}/linux-unpacked" "${pkgdir}/usr/lib/${pkgname}"
}
